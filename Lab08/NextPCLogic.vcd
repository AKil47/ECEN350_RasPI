$date
	Tue Oct 31 16:27:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALUTest_v $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 8 ' passed [7:0] $end
$scope module uut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 ( CurrentPC [63:0] $end
$var wire 64 ) NextPC [63:0] $end
$var wire 64 * SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var reg 64 + temp [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 , numTests [7:0] $end
$var reg 8 - passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 65 . actualOut [64:0] $end
$var reg 65 / expectedOut [64:0] $end
$var reg 8 0 passed [7:0] $end
$var reg 257 1 testType [256:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
b100 +
b100 *
b100 )
b0 (
b0 '
0&
b100 %
b0 $
1#
0"
b100 !
$end
#40000
b10000 !
b10000 )
b10000 +
1"
b1 '
b1 0
b10100001001011010001000000010011000100000010000010100110001010101001000000110100101110011011011100010011101110100001000000011000000100000011111000010000001110000011011110111001101101001011101000110100101110110011001010010000001101010011101010110110101110000 1
b100 /
b100 .
#80000
b100 !
b100 )
b100 +
b1111111111111111111111111111111111111111111111111111111111111100 %
b1111111111111111111111111111111111111111111111111111111111111100 *
0"
b10 '
b10 0
b10000110100001001011010001000000010011000100000010000010100110001010101001000000110100101110011001000000011000000100000011111000010000001110000011011110111001101101001011101000110100101110110011001010010000001101010011101010110110101110000 1
b10000 /
b10000 .
#120000
b0 !
b0 )
b0 +
b10000 $
b10000 (
1"
b11 '
b11 0
b10100001001011010001000000010011000100000010000010100110001010101001000000110100101110011011011100010011101110100001000000011000000100000011111000010000001101110011001010110011101100001011101000110100101110110011001010010000001101010011101010110110101110000 1
b100 /
b100 .
#160000
b10000 !
b10000 )
b10000 +
b0 $
b0 (
b100 %
b100 *
0#
0"
1&
b100 '
b100 0
b10000110100001001011010001000000010011000100000010000010100110001010101001000000110100101110011001000000011000000100000011111000010000001101110011001010110011101100001011101000110100101110110011001010010000001101010011101010110110101110000 1
b0 /
b0 .
#200000
b0 !
b0 )
b0 +
b10000 $
b10000 (
b1111111111111111111111111111111111111111111111111111111111111100 %
b1111111111111111111111111111111111111111111111111111111111111100 *
b101 '
b101 0
b100001000100000011111000010000001110000011011110111001101101001011101000110100101110110011001010010000001101010011101010110110101110000 1
b10000 /
b10000 .
#240000
b110 ,
b110 -
b110 '
b110 0
b1000010001000000010000001101110011001010110011101100001011101000110100101110110011001010010000001101010011101010110110101110000 1
b0 /
b0 .
